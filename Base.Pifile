# This image is intended to provide a base layer for various 
# Sensorboxes configurations. 

FROM http://downloads.raspberrypi.org/raspbian_lite/images/raspbian_lite-2019-07-12/2019-07-10-raspbian-buster-lite.zip
PUMP 400M

# Upgrade raspbian
RUN apt-get update

# Install basic software
RUN apt-get install -y \
    python3 python3-pip \
    i2c-tools \
    vim \
    git \
    mosh \
    libusb-1.0-0-dev

RUN pip3 install --upgrade pip

# Install networking tools
RUN apt-get install -y \
    batctl \
    tcpdump \
    hostapd \
    dnsmasq \
    alfred \
    bridge-utils
RUN pip3 install ping3

# Set default password
RUN bash -c 'echo "pi:natur" | chpasswd'

# Allow basic connectivity (0 == success status code - enable)
RUN raspi-config nonint do_serial 0
RUN raspi-config nonint do_ssh 0

# Install configuration files
INSTALL Base /

# Fix permissions on host ssh files
RUN bash -c 'chown root:root /etc/ssh/ssh_host_*'
RUN bash -c 'chmod 600 /etc/ssh/ssh_host_*_key'
RUN bash -c 'chmod 644 /etc/ssh/ssh_host_*_key.pub'
RUN systemctl disable regenerate_ssh_host_keys

# Install user ssh files and fix permissions
INSTALL Base/home/pi/.ssh /home/pi/.ssh
RUN chown pi:pi /home/pi
RUN chown pi:pi /home/pi/.ssh
RUN chown pi:pi /home/pi/.ssh/id_ed25519
RUN chown pi:pi /home/pi/.ssh/id_ed25519.pub
RUN chown pi:pi /home/pi/.ssh/authorized_keys
RUN chmod 755   /home/pi
RUN chmod 700   /home/pi/.ssh
RUN chmod 600   /home/pi/.ssh/id_ed25519
RUN chmod 644   /home/pi/.ssh/id_ed25519.pub
RUN chmod 644   /home/pi/.ssh/authorized_keys

# Install root ssh files and fix permissions
INSTALL Base/home/pi/.ssh /root/.ssh
RUN chown root:root /root
RUN chown root:root /root/.ssh
RUN chown root:root /root/.ssh/id_ed25519
RUN chown root:root /root/.ssh/id_ed25519.pub
RUN chown root:root /root/.ssh/authorized_keys
RUN chmod 755       /root
RUN chmod 700       /root/.ssh
RUN chmod 600       /root/.ssh/id_ed25519
RUN chmod 644       /root/.ssh/id_ed25519.pub
RUN chmod 644       /root/.ssh/authorized_keys

# Set Europe/Berlin timezone
RUN ln -sf /usr/share/zoneinfo/Europe/Berlin /etc/localtime 

# add hdd mount to fstab
RUN bash -c 'echo "/dev/sda1 /data ext4 defaults,auto,nofail 0 0" >> /etc/fstab'

# set git config for possible local commits
RUN git config --global user.email "root@nature40-sensorbox"
RUN git config --global user.name "Nature 4.0 Sensorbox"

# Install uhubctl
RUN bash -c 'cd /home/pi/uhubctl; make; make install'

# Install wireguard
RUN apt-get install -y dirmngr raspberrypi-kernel-headers
RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 8B48AD6246925553
RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 7638D0442B90D010
RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 04EE7237B7D453EC
RUN bash -c 'echo "deb http://deb.debian.org/debian/ unstable main" | tee -a /etc/apt/sources.list.d/unstable.list'
RUN bash -c "printf 'Package: *\nPin: release a=unstable\nPin-Priority: 150\n' | tee -a /etc/apt/preferences.d/limit-unstable"
RUN apt-get update
RUN apt-get install -y wireguard
RUN bash -c "echo net.ipv4.ip_forward=1 | tee -a /etc/sysctl.conf"
RUN mkdir -p /etc/wireguard

# enable hostname-config script
RUN systemctl enable hostname-config.service

# enable wireguard-config
RUN ln -s /boot/wireguard.conf /etc/wireguard/nature40.conf
RUN systemctl enable wg-quick@nature40

# Install RTL8822BU drivers for all kernel version
RUN install-bu8822.sh

# Install and enable caddy
RUN curl https://getcaddy.com -o /tmp/getcaddy.sh
RUN bash /tmp/getcaddy.sh personal
RUN systemctl enable caddy

# Install and enable sysdweb
RUN chown -R pi:pi /home/pi/
RUN pip3 install -e /home/pi/sysdweb
RUN systemctl enable sysdweb

# Create symlinks for other webserver targets
RUN mkdir /data
RUN ln -s . /data/sysdweb
RUN ln -s /boot/ /data/boot

# Dump dmesg to disk
RUN systemctl enable dmesgdump

# enable mesh-config script
RUN systemctl enable adhoc-config.service

# Enable broadcast pings
RUN bash -c "echo net.ipv4.icmp_echo_ignore_broadcasts=0 | tee -a /etc/sysctl.conf"

# Enable batmobile timed execution
RUN systemctl enable batmobile.timer
RUN systemctl enable alfred.service
RUN systemctl enable alfred-info.timer

# enable hostapd-config script
RUN systemctl enable hostapd-config.service
RUN systemctl enable hostapd.service
